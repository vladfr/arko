// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipeline.proto

package pipeline

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MyPipelineConfig struct {
	Param                string   `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MyPipelineConfig) Reset()         { *m = MyPipelineConfig{} }
func (m *MyPipelineConfig) String() string { return proto.CompactTextString(m) }
func (*MyPipelineConfig) ProtoMessage()    {}
func (*MyPipelineConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac67a7adf3df9c7, []int{0}
}

func (m *MyPipelineConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MyPipelineConfig.Unmarshal(m, b)
}
func (m *MyPipelineConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MyPipelineConfig.Marshal(b, m, deterministic)
}
func (m *MyPipelineConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MyPipelineConfig.Merge(m, src)
}
func (m *MyPipelineConfig) XXX_Size() int {
	return xxx_messageInfo_MyPipelineConfig.Size(m)
}
func (m *MyPipelineConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MyPipelineConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MyPipelineConfig proto.InternalMessageInfo

func (m *MyPipelineConfig) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func (m *MyPipelineConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type PipelineStatus struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipelineStatus) Reset()         { *m = PipelineStatus{} }
func (m *PipelineStatus) String() string { return proto.CompactTextString(m) }
func (*PipelineStatus) ProtoMessage()    {}
func (*PipelineStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac67a7adf3df9c7, []int{1}
}

func (m *PipelineStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipelineStatus.Unmarshal(m, b)
}
func (m *PipelineStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipelineStatus.Marshal(b, m, deterministic)
}
func (m *PipelineStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipelineStatus.Merge(m, src)
}
func (m *PipelineStatus) XXX_Size() int {
	return xxx_messageInfo_PipelineStatus.Size(m)
}
func (m *PipelineStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PipelineStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PipelineStatus proto.InternalMessageInfo

func (m *PipelineStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*MyPipelineConfig)(nil), "MyPipelineConfig")
	proto.RegisterType((*PipelineStatus)(nil), "PipelineStatus")
}

func init() {
	proto.RegisterFile("pipeline.proto", fileDescriptor_7ac67a7adf3df9c7)
}

var fileDescriptor_7ac67a7adf3df9c7 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0xc8, 0x2c, 0x48,
	0xcd, 0xc9, 0xcc, 0x4b, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe1, 0x12, 0xf0, 0xad,
	0x0c, 0x80, 0x8a, 0x39, 0xe7, 0xe7, 0xa5, 0x65, 0xa6, 0x0b, 0x89, 0x70, 0xb1, 0x16, 0x24, 0x16,
	0x25, 0xe6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x38, 0x42, 0x52, 0x5c, 0x1c, 0x05,
	0x89, 0xc5, 0xc5, 0xe5, 0xf9, 0x45, 0x29, 0x12, 0x4c, 0x60, 0x09, 0x38, 0x5f, 0x49, 0x8b, 0x8b,
	0x0f, 0x66, 0x46, 0x70, 0x49, 0x62, 0x49, 0x69, 0xb1, 0x90, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x71,
	0x71, 0x62, 0x7a, 0x2a, 0xd4, 0x14, 0x18, 0xd7, 0xc8, 0x92, 0x8b, 0x0b, 0x61, 0xa3, 0x90, 0x36,
	0x17, 0x73, 0x50, 0x69, 0x9e, 0x90, 0xa0, 0x1e, 0xba, 0x2b, 0xa4, 0xf8, 0xf5, 0x50, 0x8d, 0x54,
	0x62, 0x48, 0x62, 0x03, 0xbb, 0xd9, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x14, 0x4c, 0xbf, 0xce,
	0xc5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MyPipelineClient is the client API for MyPipeline service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MyPipelineClient interface {
	Run(ctx context.Context, in *MyPipelineConfig, opts ...grpc.CallOption) (*PipelineStatus, error)
}

type myPipelineClient struct {
	cc grpc.ClientConnInterface
}

func NewMyPipelineClient(cc grpc.ClientConnInterface) MyPipelineClient {
	return &myPipelineClient{cc}
}

func (c *myPipelineClient) Run(ctx context.Context, in *MyPipelineConfig, opts ...grpc.CallOption) (*PipelineStatus, error) {
	out := new(PipelineStatus)
	err := c.cc.Invoke(ctx, "/MyPipeline/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MyPipelineServer is the server API for MyPipeline service.
type MyPipelineServer interface {
	Run(context.Context, *MyPipelineConfig) (*PipelineStatus, error)
}

// UnimplementedMyPipelineServer can be embedded to have forward compatible implementations.
type UnimplementedMyPipelineServer struct {
}

func (*UnimplementedMyPipelineServer) Run(ctx context.Context, req *MyPipelineConfig) (*PipelineStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}

func RegisterMyPipelineServer(s *grpc.Server, srv MyPipelineServer) {
	s.RegisterService(&_MyPipeline_serviceDesc, srv)
}

func _MyPipeline_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MyPipelineConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyPipelineServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MyPipeline/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyPipelineServer).Run(ctx, req.(*MyPipelineConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyPipeline_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MyPipeline",
	HandlerType: (*MyPipelineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _MyPipeline_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pipeline.proto",
}
